type Actor {
      _id: Int!
      name: String!
      email: String!
      phone: String!
    }

    type Movie {
      _id: Int!
      actors: [Actor!]
      name: String!
      description: String!
      status: Status!
    }

    enum Status {
      NOT_STARTED
      IN_PROGRESS
      COMPLETED
    }

    input FetchActor {
      id: Int!
    }

    input FetchMovie {
      id: Int!
    }

    input NewActor {
      name: String!
      email: String!
      phone: String!
    }

    input NewMovie {
      actorId: [ID!]
      name: String!
      description: String!
      status: Status!
    }

    type Query {
      actors: [Actor!]!
      movies: [Movie!]!
      actor(input: FetchActor): Actor!
      movie(input: FetchMovie): Movie!
    }

    type Mutation {
      createMovie(input: NewMovie!): Movie!
      createActor(input: NewActor!): Actor!
    }
