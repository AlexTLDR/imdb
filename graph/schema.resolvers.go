package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"fmt"
	"imdb/graph/model"
)

// AddMovie is the resolver for the add_movie field.
func (r *mutationResolver) AddMovie(ctx context.Context, input model.MovieInput) (*model.PostStatus, error) {
	panic(fmt.Errorf("not implemented: AddMovie - add_movie"))
}

// UpdateMovie is the resolver for the update_movie field.
func (r *mutationResolver) UpdateMovie(ctx context.Context, input *model.UpdateInput) (*model.PutStatus, error) {
	panic(fmt.Errorf("not implemented: UpdateMovie - update_movie"))
}

// DeleteMovie is the resolver for the delete_movie field.
func (r *mutationResolver) DeleteMovie(ctx context.Context, movieID string) (*model.DeleteStatus, error) {
	panic(fmt.Errorf("not implemented: DeleteMovie - delete_movie"))
}

// AddActor is the resolver for the add_actor field.
func (r *mutationResolver) AddActor(ctx context.Context, input model.ActorInput) (*model.PostStatus, error) {
	panic(fmt.Errorf("not implemented: AddActor - add_actor"))
}

// UpdateActor is the resolver for the update_actor field.
func (r *mutationResolver) UpdateActor(ctx context.Context, input *model.UpdateActorInput) (*model.PutStatus, error) {
	panic(fmt.Errorf("not implemented: UpdateActor - update_actor"))
}

// DeleteActor is the resolver for the delete_actor field.
func (r *mutationResolver) DeleteActor(ctx context.Context, movieID string) (*model.DeleteStatus, error) {
	panic(fmt.Errorf("not implemented: DeleteActor - delete_actor"))
}

// Movie is the resolver for the movie field.
func (r *queryResolver) Movie(ctx context.Context, movieID string) (*model.GetMovieResult, error) {
	panic(fmt.Errorf("not implemented: Movie - movie"))
}

// Movies is the resolver for the movies field.
func (r *queryResolver) Movies(ctx context.Context) ([]*model.Movie, error) {
	panic(fmt.Errorf("not implemented: Movies - movies"))
}

// Getmovies is the resolver for the getmovies field.
func (r *queryResolver) Getmovies(ctx context.Context, getgenre *model.MovieGenre) ([]*model.Movie, error) {
	panic(fmt.Errorf("not implemented: Getmovies - getmovies"))
}

// Actor is the resolver for the actor field.
func (r *queryResolver) Actor(ctx context.Context, actorID string) (*model.GetActorResult, error) {
	panic(fmt.Errorf("not implemented: Actor - actor"))
}

// Actors is the resolver for the actors field.
func (r *queryResolver) Actors(ctx context.Context) ([]*model.Actor, error) {
	panic(fmt.Errorf("not implemented: Actors - actors"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
